{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","_","capitalize","map","node","slug","fields","frontmatter","title","date","key","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"2FAAA,qHAmDeA,UA7CF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEE,IAAEC,WAAWN,GAFf,IAGjB,OACI,kBAAC,IAAD,KACE,4BAAKI,GACJF,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KADe,EAECD,EAAKG,YAArBC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,KACf,OACE,yBAAKC,IAAKL,GACR,4BAAKG,GACL,2CAAiBC,GACjB,yBAAKE,wBAAyB,CAAEC,OAAQR,EAAKS,cA8BlD,IAAMC,EAAS","file":"component---src-templates-tags-js-7b5814d876c235c4198f.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Layout from \"../components/layout\"\nimport _ from \"lodash\"\n// Components\nimport { Link, graphql } from \"gatsby\"\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${_.capitalize(tag)}\"`\nreturn (\n    <Layout>\n      <h1>{tagHeader}</h1>\n      {edges.map(({ node }) => {\n        const { slug } = node.fields\n        const { title, date } = node.frontmatter\n        return (\n          <div key={slug}>\n            <h1>{title}</h1>\n            <b>Date Posted: {date}</b>\n            <div dangerouslySetInnerHTML={{ __html: node.html }} />\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n          html\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}